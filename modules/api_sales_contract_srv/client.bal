// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

import ballerinax/sap;
import ballerina/http;

# The service contains header and item entities, as well as their sub-entities for partners and pricing elements. Once the sales contract has been created, the sales contract number is sent in the response with the data included in the sales contract. If there are any issues when creating, retrieving, updating, or deleting the sales contract, the system displays error messages in the response.
public isolated client class Client {
    final sap:HttpClient clientEp;
    # Gets invoked to initialize the `connector`.
    #
    # + config - The configurations to be used when initializing the `connector` 
    # + serviceUrl - URL of the target service 
    # + return - An error if connector initialization failed 
    public isolated function init(ConnectionConfig config, string serviceUrl = "https://:/sap/opu/odata/sap/API_SALES_CONTRACT_SRV") returns error? {
        http:ClientConfiguration httpClientConfig = {auth: config.auth, httpVersion: config.httpVersion, timeout: config.timeout, forwarded: config.forwarded, poolConfig: config.poolConfig, compression: config.compression, circuitBreaker: config.circuitBreaker, retryConfig: config.retryConfig, validation: config.validation};
        do {
            if config.http1Settings is ClientHttp1Settings {
                ClientHttp1Settings settings = check config.http1Settings.ensureType(ClientHttp1Settings);
                httpClientConfig.http1Settings = {...settings};
            }
            if config.http2Settings is http:ClientHttp2Settings {
                httpClientConfig.http2Settings = check config.http2Settings.ensureType(http:ClientHttp2Settings);
            }
            if config.cache is http:CacheConfig {
                httpClientConfig.cache = check config.cache.ensureType(http:CacheConfig);
            }
            if config.responseLimits is http:ResponseLimitConfigs {
                httpClientConfig.responseLimits = check config.responseLimits.ensureType(http:ResponseLimitConfigs);
            }
            if config.secureSocket is http:ClientSecureSocket {
                httpClientConfig.secureSocket = check config.secureSocket.ensureType(http:ClientSecureSocket);
            }
            if config.proxy is http:ProxyConfig {
                httpClientConfig.proxy = check config.proxy.ensureType(http:ProxyConfig);
            }
        }
        sap:HttpClient httpEp = check new (serviceUrl, httpClientConfig);
        self.clientEp = httpEp;
        return;
    }
    # Reads all sales contract headers.
    #
    # + top - Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
    # + skip - Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
    # + filter - Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
    # + count - Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
    # + orderby - Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entities 
    remote isolated function listA_SalesContract(int? top = (), int? skip = (), string? filter = (), boolean? count = (), A_SalesContractOrderByOptions? orderby = (), A_SalesContractSelectOptions? 'select = (), A_SalesContractExpandOptions? expand = ()) returns CollectionOfA_salescontracttype|error {
        string resourcePath = string `/A_SalesContract`;
        map<anydata> queryParam = {"$top": top, "$skip": skip, "$filter": filter, "$count": count, "$orderby": orderby, "$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$orderby": {style: FORM, explode: false}, "$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        CollectionOfA_salescontracttype response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Creates a sales contract.
    #
    # + payload - New entity
    # + return - Created entity 
    remote isolated function createA_SalesContract(CreateA_SalesContract payload) returns A_SalesContract|error {
        string resourcePath = string `/A_SalesContract`;
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        A_SalesContract response = check self.clientEp->post(resourcePath, request);
        return response;
    }
    # Reads the header of a specific sales contract.
    #
    # + salesContract - Sales Contract
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entity 
    remote isolated function getA_SalesContractByKey(string salesContract, A_SalesContractByKeySelectOptions? 'select = (), A_SalesContractByKeyExpandOptions? expand = ()) returns A_SalesContract|error {
        string resourcePath = string `/A_SalesContract('${getEncodedUri(salesContract)}')`;
        map<anydata> queryParam = {"$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        A_SalesContract response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Deletes a specific sales contract.
    #
    # + salesContract - Sales Contract
    # + return - Success 
    remote isolated function deleteA_SalesContract(string salesContract) returns http:Response|error {
        string resourcePath = string `/A_SalesContract('${getEncodedUri(salesContract)}')`;
        http:Response response = check self.clientEp->delete(resourcePath);
        return response;
    }
    # Updates the header of a specific sales contract.
    #
    # + salesContract - Sales Contract
    # + payload - New property values
    # + return - Success 
    remote isolated function patchA_SalesContract(string salesContract, UpdateA_SalesContract payload) returns http:Response|error {
        string resourcePath = string `/A_SalesContract('${getEncodedUri(salesContract)}')`;
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        http:Response response = check self.clientEp->patch(resourcePath, request);
        return response;
    }
    # Reads items of a specific sales contract.
    #
    # + salesContract - Sales Contract
    # + top - Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
    # + skip - Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
    # + filter - Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
    # + count - Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
    # + orderby - Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entities 
    remote isolated function getItemOfA_SalesContract(string salesContract, int? top = (), int? skip = (), string? filter = (), boolean? count = (), ItemOfA_SalesContractOrderByOptions? orderby = (), ItemOfA_SalesContractSelectOptions? 'select = (), ItemOfA_SalesContractExpandOptions? expand = ()) returns CollectionOfA_salescontractitemtype|error {
        string resourcePath = string `/A_SalesContract('${getEncodedUri(salesContract)}')/to_Item`;
        map<anydata> queryParam = {"$top": top, "$skip": skip, "$filter": filter, "$count": count, "$orderby": orderby, "$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$orderby": {style: FORM, explode: false}, "$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        CollectionOfA_salescontractitemtype response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Creates one or more items for a specific sales contract.
    #
    # + salesContract - Sales Contract
    # + payload - New entity
    # + return - Created entity 
    remote isolated function createItemOfA_SalesContract(string salesContract, CreateA_SalesContractItem payload) returns A_SalesContractItem|error {
        string resourcePath = string `/A_SalesContract('${getEncodedUri(salesContract)}')/to_Item`;
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        A_SalesContractItem response = check self.clientEp->post(resourcePath, request);
        return response;
    }
    # Reads the header-level partners of a specific sales contract.
    #
    # + salesContract - Sales Contract
    # + top - Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
    # + skip - Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
    # + filter - Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
    # + count - Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
    # + orderby - Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entities 
    remote isolated function getPartnerOfA_SalesContract(string salesContract, int? top = (), int? skip = (), string? filter = (), boolean? count = (), PartnerOfA_SalesContractOrderByOptions? orderby = (), PartnerOfA_SalesContractSelectOptions? 'select = (), PartnerOfA_SalesContractExpandOptions? expand = ()) returns CollectionOfA_salescontractpartnertype|error {
        string resourcePath = string `/A_SalesContract('${getEncodedUri(salesContract)}')/to_Partner`;
        map<anydata> queryParam = {"$top": top, "$skip": skip, "$filter": filter, "$count": count, "$orderby": orderby, "$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$orderby": {style: FORM, explode: false}, "$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        CollectionOfA_salescontractpartnertype response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Creates the header partners of a specific sales contract.
    #
    # + salesContract - Sales Contract
    # + payload - New entity
    # + return - Created entity 
    remote isolated function createPartnerOfA_SalesContract(string salesContract, CreateA_SalesContractPartner payload) returns A_SalesContractPartner|error {
        string resourcePath = string `/A_SalesContract('${getEncodedUri(salesContract)}')/to_Partner`;
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        A_SalesContractPartner response = check self.clientEp->post(resourcePath, request);
        return response;
    }
    # Reads the header-level pricing elements of a specific sales contract.
    #
    # + salesContract - Sales Contract
    # + top - Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
    # + skip - Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
    # + filter - Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
    # + count - Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
    # + orderby - Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entities 
    remote isolated function getPricingElementOfA_SalesContract(string salesContract, int? top = (), int? skip = (), string? filter = (), boolean? count = (), PricingElementOfA_SalesContractOrderByOptions? orderby = (), PricingElementOfA_SalesContractSelectOptions? 'select = (), PricingElementOfA_SalesContractExpandOptions? expand = ()) returns CollectionOfA_salescontractprcgelmnttype|error {
        string resourcePath = string `/A_SalesContract('${getEncodedUri(salesContract)}')/to_PricingElement`;
        map<anydata> queryParam = {"$top": top, "$skip": skip, "$filter": filter, "$count": count, "$orderby": orderby, "$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$orderby": {style: FORM, explode: false}, "$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        CollectionOfA_salescontractprcgelmnttype response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Reads the header-level texts of a specific sales contract.
    #
    # + salesContract - Sales Contract
    # + top - Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
    # + skip - Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
    # + filter - Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
    # + count - Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
    # + orderby - Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entities 
    remote isolated function getTextOfA_SalesContract(string salesContract, int? top = (), int? skip = (), string? filter = (), boolean? count = (), TextOfA_SalesContractOrderByOptions? orderby = (), TextOfA_SalesContractSelectOptions? 'select = (), TextOfA_SalesContractExpandOptions? expand = ()) returns CollectionOfA_salescontracttexttype|error {
        string resourcePath = string `/A_SalesContract('${getEncodedUri(salesContract)}')/to_Text`;
        map<anydata> queryParam = {"$top": top, "$skip": skip, "$filter": filter, "$count": count, "$orderby": orderby, "$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$orderby": {style: FORM, explode: false}, "$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        CollectionOfA_salescontracttexttype response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Reads all sales contract items.
    #
    # + top - Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
    # + skip - Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
    # + filter - Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
    # + count - Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
    # + orderby - Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entities 
    remote isolated function listA_SalesContractItem(int? top = (), int? skip = (), string? filter = (), boolean? count = (), A_SalesContractItemOrderByOptions? orderby = (), A_SalesContractItemSelectOptions? 'select = (), A_SalesContractItemExpandOptions? expand = ()) returns CollectionOfA_salescontractitemtype|error {
        string resourcePath = string `/A_SalesContractItem`;
        map<anydata> queryParam = {"$top": top, "$skip": skip, "$filter": filter, "$count": count, "$orderby": orderby, "$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$orderby": {style: FORM, explode: false}, "$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        CollectionOfA_salescontractitemtype response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Creates one or more sales contract items for a specific sales contract.
    #
    # + payload - New entity
    # + return - Created entity 
    remote isolated function createA_SalesContractItem(CreateA_SalesContractItem payload) returns A_SalesContractItem|error {
        string resourcePath = string `/A_SalesContractItem`;
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        A_SalesContractItem response = check self.clientEp->post(resourcePath, request);
        return response;
    }
    # Reads a specific sales contract item.
    #
    # + salesContract - Sales Contract
    # + salesContractItem - Sales Contract Item
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entity 
    remote isolated function getA_SalesContractItemByKey(string salesContract, string salesContractItem, A_SalesContractItemByKeySelectOptions? 'select = (), A_SalesContractItemByKeyExpandOptions? expand = ()) returns A_SalesContractItem|error {
        string resourcePath = string `/A_SalesContractItem(SalesContract='${getEncodedUri(salesContract)}',SalesContractItem='${getEncodedUri(salesContractItem)}')`;
        map<anydata> queryParam = {"$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        A_SalesContractItem response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Deletes a specific sales contract item.
    #
    # + salesContract - Sales Contract
    # + salesContractItem - Sales Contract Item
    # + return - Success 
    remote isolated function deleteA_SalesContractItem(string salesContract, string salesContractItem) returns http:Response|error {
        string resourcePath = string `/A_SalesContractItem(SalesContract='${getEncodedUri(salesContract)}',SalesContractItem='${getEncodedUri(salesContractItem)}')`;
        http:Response response = check self.clientEp->delete(resourcePath);
        return response;
    }
    # Updates a specific sales contract item.
    #
    # + salesContract - Sales Contract
    # + salesContractItem - Sales Contract Item
    # + payload - New property values
    # + return - Success 
    remote isolated function patchA_SalesContractItem(string salesContract, string salesContractItem, UpdateA_SalesContractItem payload) returns http:Response|error {
        string resourcePath = string `/A_SalesContractItem(SalesContract='${getEncodedUri(salesContract)}',SalesContractItem='${getEncodedUri(salesContractItem)}')`;
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        http:Response response = check self.clientEp->patch(resourcePath, request);
        return response;
    }
    # Reads the item-level partner of a specific sales contract item.
    #
    # + salesContract - Sales Contract
    # + salesContractItem - Sales Contract Item
    # + top - Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
    # + skip - Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
    # + filter - Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
    # + count - Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
    # + orderby - Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entities 
    remote isolated function getPartnerOfA_SalesContractItem(string salesContract, string salesContractItem, int? top = (), int? skip = (), string? filter = (), boolean? count = (), PartnerOfA_SalesContractItemOrderByOptions? orderby = (), PartnerOfA_SalesContractItemSelectOptions? 'select = (), PartnerOfA_SalesContractItemExpandOptions? expand = ()) returns CollectionOfA_salescontractitempartnertype|error {
        string resourcePath = string `/A_SalesContractItem(SalesContract='${getEncodedUri(salesContract)}',SalesContractItem='${getEncodedUri(salesContractItem)}')/to_Partner`;
        map<anydata> queryParam = {"$top": top, "$skip": skip, "$filter": filter, "$count": count, "$orderby": orderby, "$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$orderby": {style: FORM, explode: false}, "$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        CollectionOfA_salescontractitempartnertype response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Reads the item-level pricing element of a specific sales contract item.
    #
    # + salesContract - Sales Contract
    # + salesContractItem - Sales Contract Item
    # + top - Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
    # + skip - Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
    # + filter - Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
    # + count - Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
    # + orderby - Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entities 
    remote isolated function getPricingElementOfA_SalesContractItem(string salesContract, string salesContractItem, int? top = (), int? skip = (), string? filter = (), boolean? count = (), PricingElementOfA_SalesContractItemOrderByOptions? orderby = (), PricingElementOfA_SalesContractItemSelectOptions? 'select = (), PricingElementOfA_SalesContractItemExpandOptions? expand = ()) returns CollectionOfA_salescontractitemprcgelmnttype|error {
        string resourcePath = string `/A_SalesContractItem(SalesContract='${getEncodedUri(salesContract)}',SalesContractItem='${getEncodedUri(salesContractItem)}')/to_PricingElement`;
        map<anydata> queryParam = {"$top": top, "$skip": skip, "$filter": filter, "$count": count, "$orderby": orderby, "$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$orderby": {style: FORM, explode: false}, "$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        CollectionOfA_salescontractitemprcgelmnttype response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Reads the sales contract header for a specific sales contract item.
    #
    # + salesContract - Sales Contract
    # + salesContractItem - Sales Contract Item
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entity 
    remote isolated function getSalesContractOfA_SalesContractItem(string salesContract, string salesContractItem, SalesContractOfA_SalesContractItemSelectOptions? 'select = (), SalesContractOfA_SalesContractItemExpandOptions? expand = ()) returns A_SalesContract|error {
        string resourcePath = string `/A_SalesContractItem(SalesContract='${getEncodedUri(salesContract)}',SalesContractItem='${getEncodedUri(salesContractItem)}')/to_SalesContract`;
        map<anydata> queryParam = {"$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        A_SalesContract response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Reads the item-level text of a specific sales contract item.
    #
    # + salesContract - Sales Contract
    # + salesContractItem - Sales Contract Item
    # + top - Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
    # + skip - Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
    # + filter - Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
    # + count - Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
    # + orderby - Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entities 
    remote isolated function getTextOfA_SalesContractItem(string salesContract, string salesContractItem, int? top = (), int? skip = (), string? filter = (), boolean? count = (), TextOfA_SalesContractItemOrderByOptions? orderby = (), TextOfA_SalesContractItemSelectOptions? 'select = (), TextOfA_SalesContractItemExpandOptions? expand = ()) returns CollectionOfA_salescontractitemtexttype|error {
        string resourcePath = string `/A_SalesContractItem(SalesContract='${getEncodedUri(salesContract)}',SalesContractItem='${getEncodedUri(salesContractItem)}')/to_Text`;
        map<anydata> queryParam = {"$top": top, "$skip": skip, "$filter": filter, "$count": count, "$orderby": orderby, "$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$orderby": {style: FORM, explode: false}, "$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        CollectionOfA_salescontractitemtexttype response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Reads all item-level partners.
    #
    # + top - Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
    # + skip - Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
    # + filter - Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
    # + count - Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
    # + orderby - Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entities 
    remote isolated function listA_SalesContractItemPartner(int? top = (), int? skip = (), string? filter = (), boolean? count = (), A_SalesContractItemPartnerOrderByOptions? orderby = (), A_SalesContractItemPartnerSelectOptions? 'select = (), A_SalesContractItemPartnerExpandOptions? expand = ()) returns CollectionOfA_salescontractitempartnertype|error {
        string resourcePath = string `/A_SalesContractItemPartner`;
        map<anydata> queryParam = {"$top": top, "$skip": skip, "$filter": filter, "$count": count, "$orderby": orderby, "$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$orderby": {style: FORM, explode: false}, "$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        CollectionOfA_salescontractitempartnertype response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Reads a specific item-level partner.
    #
    # + salesContract - Sales Contract
    # + salesContractItem - Sales Contract Item
    # + partnerFunction - Partner Function
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entity 
    remote isolated function getA_SalesContractItemPartnerByKey(string salesContract, string salesContractItem, string partnerFunction, A_SalesContractItemPartnerByKeySelectOptions? 'select = (), A_SalesContractItemPartnerByKeyExpandOptions? expand = ()) returns A_SalesContractItemPartner|error {
        string resourcePath = string `/A_SalesContractItemPartner(SalesContract='${getEncodedUri(salesContract)}',SalesContractItem='${getEncodedUri(salesContractItem)}',PartnerFunction='${getEncodedUri(partnerFunction)}')`;
        map<anydata> queryParam = {"$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        A_SalesContractItemPartner response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Deletes a specific item-level partner.
    #
    # + salesContract - Sales Contract
    # + salesContractItem - Sales Contract Item
    # + partnerFunction - Partner Function
    # + return - Success 
    remote isolated function deleteA_SalesContractItemPartner(string salesContract, string salesContractItem, string partnerFunction) returns http:Response|error {
        string resourcePath = string `/A_SalesContractItemPartner(SalesContract='${getEncodedUri(salesContract)}',SalesContractItem='${getEncodedUri(salesContractItem)}',PartnerFunction='${getEncodedUri(partnerFunction)}')`;
        http:Response response = check self.clientEp->delete(resourcePath);
        return response;
    }
    # Updates a specific item-level partner.
    #
    # + salesContract - Sales Contract
    # + salesContractItem - Sales Contract Item
    # + partnerFunction - Partner Function
    # + payload - New property values
    # + return - Success 
    remote isolated function patchA_SalesContractItemPartner(string salesContract, string salesContractItem, string partnerFunction, UpdateA_SalesContractItemPartner payload) returns http:Response|error {
        string resourcePath = string `/A_SalesContractItemPartner(SalesContract='${getEncodedUri(salesContract)}',SalesContractItem='${getEncodedUri(salesContractItem)}',PartnerFunction='${getEncodedUri(partnerFunction)}')`;
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        http:Response response = check self.clientEp->patch(resourcePath, request);
        return response;
    }
    # Reads the sales contract header for a specific item partner.
    #
    # + salesContract - Sales Contract
    # + salesContractItem - Sales Contract Item
    # + partnerFunction - Partner Function
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entity 
    remote isolated function getSalesContractOfA_SalesContractItemPartner(string salesContract, string salesContractItem, string partnerFunction, SalesContractOfA_SalesContractItemPartnerSelectOptions? 'select = (), SalesContractOfA_SalesContractItemPartnerExpandOptions? expand = ()) returns A_SalesContract|error {
        string resourcePath = string `/A_SalesContractItemPartner(SalesContract='${getEncodedUri(salesContract)}',SalesContractItem='${getEncodedUri(salesContractItem)}',PartnerFunction='${getEncodedUri(partnerFunction)}')/to_SalesContract`;
        map<anydata> queryParam = {"$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        A_SalesContract response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Reads the sales contract item for a specific item partner.
    #
    # + salesContract - Sales Contract
    # + salesContractItem - Sales Contract Item
    # + partnerFunction - Partner Function
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entity 
    remote isolated function getSalesContractItemOfA_SalesContractItemPartner(string salesContract, string salesContractItem, string partnerFunction, SalesContractItemOfA_SalesContractItemPartnerSelectOptions? 'select = (), SalesContractItemOfA_SalesContractItemPartnerExpandOptions? expand = ()) returns A_SalesContractItem|error {
        string resourcePath = string `/A_SalesContractItemPartner(SalesContract='${getEncodedUri(salesContract)}',SalesContractItem='${getEncodedUri(salesContractItem)}',PartnerFunction='${getEncodedUri(partnerFunction)}')/to_SalesContractItem`;
        map<anydata> queryParam = {"$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        A_SalesContractItem response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Reads all item-level pricing elements.
    #
    # + top - Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
    # + skip - Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
    # + filter - Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
    # + count - Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
    # + orderby - Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entities 
    remote isolated function listA_SalesContractItemPrcgElmnt(int? top = (), int? skip = (), string? filter = (), boolean? count = (), A_SalesContractItemPrcgElmntOrderByOptions? orderby = (), A_SalesContractItemPrcgElmntSelectOptions? 'select = (), A_SalesContractItemPrcgElmntExpandOptions? expand = ()) returns CollectionOfA_salescontractitemprcgelmnttype|error {
        string resourcePath = string `/A_SalesContractItemPrcgElmnt`;
        map<anydata> queryParam = {"$top": top, "$skip": skip, "$filter": filter, "$count": count, "$orderby": orderby, "$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$orderby": {style: FORM, explode: false}, "$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        CollectionOfA_salescontractitemprcgelmnttype response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Reads a specific item-level pricing element.
    #
    # + salesContract - Sales Contract
    # + salesContractItem - Sales Contract Item
    # + pricingProcedureStep - Step Number
    # + pricingProcedureCounter - Condition Counter
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entity 
    remote isolated function getA_SalesContractItemPrcgElmntByKey(string salesContract, string salesContractItem, string pricingProcedureStep, string pricingProcedureCounter, A_SalesContractItemPrcgElmntByKeySelectOptions? 'select = (), A_SalesContractItemPrcgElmntByKeyExpandOptions? expand = ()) returns A_SalesContractItemPrcgElmnt|error {
        string resourcePath = string `/A_SalesContractItemPrcgElmnt(SalesContract='${getEncodedUri(salesContract)}',SalesContractItem='${getEncodedUri(salesContractItem)}',PricingProcedureStep='${getEncodedUri(pricingProcedureStep)}',PricingProcedureCounter='${getEncodedUri(pricingProcedureCounter)}')`;
        map<anydata> queryParam = {"$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        A_SalesContractItemPrcgElmnt response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Updates a specific item-level pricing element.
    #
    # + salesContract - Sales Contract
    # + salesContractItem - Sales Contract Item
    # + pricingProcedureStep - Step Number
    # + pricingProcedureCounter - Condition Counter
    # + return - Success 
    remote isolated function deleteA_SalesContractItemPrcgElmnt(string salesContract, string salesContractItem, string pricingProcedureStep, string pricingProcedureCounter) returns http:Response|error {
        string resourcePath = string `/A_SalesContractItemPrcgElmnt(SalesContract='${getEncodedUri(salesContract)}',SalesContractItem='${getEncodedUri(salesContractItem)}',PricingProcedureStep='${getEncodedUri(pricingProcedureStep)}',PricingProcedureCounter='${getEncodedUri(pricingProcedureCounter)}')`;
        http:Response response = check self.clientEp->delete(resourcePath);
        return response;
    }
    # Updates a specific item-level partner.
    #
    # + salesContract - Sales Contract
    # + salesContractItem - Sales Contract Item
    # + pricingProcedureStep - Step Number
    # + pricingProcedureCounter - Condition Counter
    # + payload - New property values
    # + return - Success 
    remote isolated function patchA_SalesContractItemPrcgElmnt(string salesContract, string salesContractItem, string pricingProcedureStep, string pricingProcedureCounter, UpdateA_SalesContractItemPrcgElmnt payload) returns http:Response|error {
        string resourcePath = string `/A_SalesContractItemPrcgElmnt(SalesContract='${getEncodedUri(salesContract)}',SalesContractItem='${getEncodedUri(salesContractItem)}',PricingProcedureStep='${getEncodedUri(pricingProcedureStep)}',PricingProcedureCounter='${getEncodedUri(pricingProcedureCounter)}')`;
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        http:Response response = check self.clientEp->patch(resourcePath, request);
        return response;
    }
    # Reads the sales contract header for a specific item pricing element.
    #
    # + salesContract - Sales Contract
    # + salesContractItem - Sales Contract Item
    # + pricingProcedureStep - Step Number
    # + pricingProcedureCounter - Condition Counter
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entity 
    remote isolated function getSalesContractOfA_SalesContractItemPrcgElmnt(string salesContract, string salesContractItem, string pricingProcedureStep, string pricingProcedureCounter, SalesContractOfA_SalesContractItemPrcgElmntSelectOptions? 'select = (), SalesContractOfA_SalesContractItemPrcgElmntExpandOptions? expand = ()) returns A_SalesContract|error {
        string resourcePath = string `/A_SalesContractItemPrcgElmnt(SalesContract='${getEncodedUri(salesContract)}',SalesContractItem='${getEncodedUri(salesContractItem)}',PricingProcedureStep='${getEncodedUri(pricingProcedureStep)}',PricingProcedureCounter='${getEncodedUri(pricingProcedureCounter)}')/to_SalesContract`;
        map<anydata> queryParam = {"$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        A_SalesContract response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Reads the sales contract item for a specific item pricing element.
    #
    # + salesContract - Sales Contract
    # + salesContractItem - Sales Contract Item
    # + pricingProcedureStep - Step Number
    # + pricingProcedureCounter - Condition Counter
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entity 
    remote isolated function getSalesContractItemOfA_SalesContractItemPrcgElmnt(string salesContract, string salesContractItem, string pricingProcedureStep, string pricingProcedureCounter, SalesContractItemOfA_SalesContractItemPrcgElmntSelectOptions? 'select = (), SalesContractItemOfA_SalesContractItemPrcgElmntExpandOptions? expand = ()) returns A_SalesContractItem|error {
        string resourcePath = string `/A_SalesContractItemPrcgElmnt(SalesContract='${getEncodedUri(salesContract)}',SalesContractItem='${getEncodedUri(salesContractItem)}',PricingProcedureStep='${getEncodedUri(pricingProcedureStep)}',PricingProcedureCounter='${getEncodedUri(pricingProcedureCounter)}')/to_SalesContractItem`;
        map<anydata> queryParam = {"$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        A_SalesContractItem response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Reads all item-level texts.
    #
    # + top - Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
    # + skip - Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
    # + filter - Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
    # + count - Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
    # + orderby - Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entities 
    remote isolated function listA_SalesContractItemText(int? top = (), int? skip = (), string? filter = (), boolean? count = (), A_SalesContractItemTextOrderByOptions? orderby = (), A_SalesContractItemTextSelectOptions? 'select = (), A_SalesContractItemTextExpandOptions? expand = ()) returns CollectionOfA_salescontractitemtexttype|error {
        string resourcePath = string `/A_SalesContractItemText`;
        map<anydata> queryParam = {"$top": top, "$skip": skip, "$filter": filter, "$count": count, "$orderby": orderby, "$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$orderby": {style: FORM, explode: false}, "$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        CollectionOfA_salescontractitemtexttype response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Reads a specific item-level text.
    #
    # + salesContract - Sales Contract
    # + salesContractItem - Sales Contract Item
    # + language - Language Key
    # + longTextID - Text ID
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entity 
    remote isolated function getA_SalesContractItemTextByKey(string salesContract, string salesContractItem, string language, string longTextID, A_SalesContractItemTextByKeySelectOptions? 'select = (), A_SalesContractItemTextByKeyExpandOptions? expand = ()) returns A_SalesContractItemText|error {
        string resourcePath = string `/A_SalesContractItemText(SalesContract='${getEncodedUri(salesContract)}',SalesContractItem='${getEncodedUri(salesContractItem)}',Language='${getEncodedUri(language)}',LongTextID='${getEncodedUri(longTextID)}')`;
        map<anydata> queryParam = {"$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        A_SalesContractItemText response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Deletes a specific item-level text.
    #
    # + salesContract - Sales Contract
    # + salesContractItem - Sales Contract Item
    # + language - Language Key
    # + longTextID - Text ID
    # + return - Success 
    remote isolated function deleteA_SalesContractItemText(string salesContract, string salesContractItem, string language, string longTextID) returns http:Response|error {
        string resourcePath = string `/A_SalesContractItemText(SalesContract='${getEncodedUri(salesContract)}',SalesContractItem='${getEncodedUri(salesContractItem)}',Language='${getEncodedUri(language)}',LongTextID='${getEncodedUri(longTextID)}')`;
        http:Response response = check self.clientEp->delete(resourcePath);
        return response;
    }
    # Updates a specific item-level text.
    #
    # + salesContract - Sales Contract
    # + salesContractItem - Sales Contract Item
    # + language - Language Key
    # + longTextID - Text ID
    # + payload - New property values
    # + return - Success 
    remote isolated function patchA_SalesContractItemText(string salesContract, string salesContractItem, string language, string longTextID, UpdateA_SalesContractItemText payload) returns http:Response|error {
        string resourcePath = string `/A_SalesContractItemText(SalesContract='${getEncodedUri(salesContract)}',SalesContractItem='${getEncodedUri(salesContractItem)}',Language='${getEncodedUri(language)}',LongTextID='${getEncodedUri(longTextID)}')`;
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        http:Response response = check self.clientEp->patch(resourcePath, request);
        return response;
    }
    # Reads the sales contract header for a specific item text.
    #
    # + salesContract - Sales Contract
    # + salesContractItem - Sales Contract Item
    # + language - Language Key
    # + longTextID - Text ID
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entity 
    remote isolated function getSalesContractOfA_SalesContractItemText(string salesContract, string salesContractItem, string language, string longTextID, SalesContractOfA_SalesContractItemTextSelectOptions? 'select = (), SalesContractOfA_SalesContractItemTextExpandOptions? expand = ()) returns A_SalesContract|error {
        string resourcePath = string `/A_SalesContractItemText(SalesContract='${getEncodedUri(salesContract)}',SalesContractItem='${getEncodedUri(salesContractItem)}',Language='${getEncodedUri(language)}',LongTextID='${getEncodedUri(longTextID)}')/to_SalesContract`;
        map<anydata> queryParam = {"$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        A_SalesContract response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Reads the sales contract item for a specific item text.
    #
    # + salesContract - Sales Contract
    # + salesContractItem - Sales Contract Item
    # + language - Language Key
    # + longTextID - Text ID
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entity 
    remote isolated function getSalesContractItemOfA_SalesContractItemText(string salesContract, string salesContractItem, string language, string longTextID, SalesContractItemOfA_SalesContractItemTextSelectOptions? 'select = (), SalesContractItemOfA_SalesContractItemTextExpandOptions? expand = ()) returns A_SalesContractItem|error {
        string resourcePath = string `/A_SalesContractItemText(SalesContract='${getEncodedUri(salesContract)}',SalesContractItem='${getEncodedUri(salesContractItem)}',Language='${getEncodedUri(language)}',LongTextID='${getEncodedUri(longTextID)}')/to_SalesContractItem`;
        map<anydata> queryParam = {"$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        A_SalesContractItem response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Reads all header-level partners.
    #
    # + top - Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
    # + skip - Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
    # + filter - Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
    # + count - Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
    # + orderby - Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entities 
    remote isolated function listA_SalesContractPartner(int? top = (), int? skip = (), string? filter = (), boolean? count = (), A_SalesContractPartnerOrderByOptions? orderby = (), A_SalesContractPartnerSelectOptions? 'select = (), A_SalesContractPartnerExpandOptions? expand = ()) returns CollectionOfA_salescontractpartnertype|error {
        string resourcePath = string `/A_SalesContractPartner`;
        map<anydata> queryParam = {"$top": top, "$skip": skip, "$filter": filter, "$count": count, "$orderby": orderby, "$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$orderby": {style: FORM, explode: false}, "$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        CollectionOfA_salescontractpartnertype response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Reads a specific header-level partner.
    #
    # + salesContract - Sales Contract
    # + partnerFunction - Partner Function
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entity 
    remote isolated function getA_SalesContractPartnerByKey(string salesContract, string partnerFunction, A_SalesContractPartnerByKeySelectOptions? 'select = (), A_SalesContractPartnerByKeyExpandOptions? expand = ()) returns A_SalesContractPartner|error {
        string resourcePath = string `/A_SalesContractPartner(SalesContract='${getEncodedUri(salesContract)}',PartnerFunction='${getEncodedUri(partnerFunction)}')`;
        map<anydata> queryParam = {"$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        A_SalesContractPartner response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Deletes a specific header-level partner.
    #
    # + salesContract - Sales Contract
    # + partnerFunction - Partner Function
    # + return - Success 
    remote isolated function deleteA_SalesContractPartner(string salesContract, string partnerFunction) returns http:Response|error {
        string resourcePath = string `/A_SalesContractPartner(SalesContract='${getEncodedUri(salesContract)}',PartnerFunction='${getEncodedUri(partnerFunction)}')`;
        http:Response response = check self.clientEp->delete(resourcePath);
        return response;
    }
    # Updates a specific header-level partner.
    #
    # + salesContract - Sales Contract
    # + partnerFunction - Partner Function
    # + payload - New property values
    # + return - Success 
    remote isolated function patchA_SalesContractPartner(string salesContract, string partnerFunction, UpdateA_SalesContractPartner payload) returns http:Response|error {
        string resourcePath = string `/A_SalesContractPartner(SalesContract='${getEncodedUri(salesContract)}',PartnerFunction='${getEncodedUri(partnerFunction)}')`;
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        http:Response response = check self.clientEp->patch(resourcePath, request);
        return response;
    }
    # Reads the sales contract header for a specific header partner.
    #
    # + salesContract - Sales Contract
    # + partnerFunction - Partner Function
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entity 
    remote isolated function getSalesContractOfA_SalesContractPartner(string salesContract, string partnerFunction, SalesContractOfA_SalesContractPartnerSelectOptions? 'select = (), SalesContractOfA_SalesContractPartnerExpandOptions? expand = ()) returns A_SalesContract|error {
        string resourcePath = string `/A_SalesContractPartner(SalesContract='${getEncodedUri(salesContract)}',PartnerFunction='${getEncodedUri(partnerFunction)}')/to_SalesContract`;
        map<anydata> queryParam = {"$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        A_SalesContract response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Reads all header-level pricing elements.
    #
    # + top - Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
    # + skip - Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
    # + filter - Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
    # + count - Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
    # + orderby - Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entities 
    remote isolated function listA_SalesContractPrcgElmnt(int? top = (), int? skip = (), string? filter = (), boolean? count = (), A_SalesContractPrcgElmntOrderByOptions? orderby = (), A_SalesContractPrcgElmntSelectOptions? 'select = (), A_SalesContractPrcgElmntExpandOptions? expand = ()) returns CollectionOfA_salescontractprcgelmnttype|error {
        string resourcePath = string `/A_SalesContractPrcgElmnt`;
        map<anydata> queryParam = {"$top": top, "$skip": skip, "$filter": filter, "$count": count, "$orderby": orderby, "$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$orderby": {style: FORM, explode: false}, "$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        CollectionOfA_salescontractprcgelmnttype response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Reads a specific header-level pricing element.
    #
    # + salesContract - Sales Contract
    # + pricingProcedureStep - Step Number
    # + pricingProcedureCounter - Condition Counter
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entity 
    remote isolated function getA_SalesContractPrcgElmntByKey(string salesContract, string pricingProcedureStep, string pricingProcedureCounter, A_SalesContractPrcgElmntByKeySelectOptions? 'select = (), A_SalesContractPrcgElmntByKeyExpandOptions? expand = ()) returns A_SalesContractPrcgElmnt|error {
        string resourcePath = string `/A_SalesContractPrcgElmnt(SalesContract='${getEncodedUri(salesContract)}',PricingProcedureStep='${getEncodedUri(pricingProcedureStep)}',PricingProcedureCounter='${getEncodedUri(pricingProcedureCounter)}')`;
        map<anydata> queryParam = {"$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        A_SalesContractPrcgElmnt response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Deletes a specific header-level pricing element.
    #
    # + salesContract - Sales Contract
    # + pricingProcedureStep - Step Number
    # + pricingProcedureCounter - Condition Counter
    # + return - Success 
    remote isolated function deleteA_SalesContractPrcgElmnt(string salesContract, string pricingProcedureStep, string pricingProcedureCounter) returns http:Response|error {
        string resourcePath = string `/A_SalesContractPrcgElmnt(SalesContract='${getEncodedUri(salesContract)}',PricingProcedureStep='${getEncodedUri(pricingProcedureStep)}',PricingProcedureCounter='${getEncodedUri(pricingProcedureCounter)}')`;
        http:Response response = check self.clientEp->delete(resourcePath);
        return response;
    }
    # Updates a specific header-level pricing element.
    #
    # + salesContract - Sales Contract
    # + pricingProcedureStep - Step Number
    # + pricingProcedureCounter - Condition Counter
    # + payload - New property values
    # + return - Success 
    remote isolated function patchA_SalesContractPrcgElmnt(string salesContract, string pricingProcedureStep, string pricingProcedureCounter, UpdateA_SalesContractPrcgElmnt payload) returns http:Response|error {
        string resourcePath = string `/A_SalesContractPrcgElmnt(SalesContract='${getEncodedUri(salesContract)}',PricingProcedureStep='${getEncodedUri(pricingProcedureStep)}',PricingProcedureCounter='${getEncodedUri(pricingProcedureCounter)}')`;
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        http:Response response = check self.clientEp->patch(resourcePath, request);
        return response;
    }
    # Reads the sales contract header for a specific header pricing element.
    #
    # + salesContract - Sales Contract
    # + pricingProcedureStep - Step Number
    # + pricingProcedureCounter - Condition Counter
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entity 
    remote isolated function getSalesContractOfA_SalesContractPrcgElmnt(string salesContract, string pricingProcedureStep, string pricingProcedureCounter, SalesContractOfA_SalesContractPrcgElmntSelectOptions? 'select = (), SalesContractOfA_SalesContractPrcgElmntExpandOptions? expand = ()) returns A_SalesContract|error {
        string resourcePath = string `/A_SalesContractPrcgElmnt(SalesContract='${getEncodedUri(salesContract)}',PricingProcedureStep='${getEncodedUri(pricingProcedureStep)}',PricingProcedureCounter='${getEncodedUri(pricingProcedureCounter)}')/to_SalesContract`;
        map<anydata> queryParam = {"$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        A_SalesContract response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Reads all header-level texts.
    #
    # + top - Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
    # + skip - Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
    # + filter - Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
    # + count - Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
    # + orderby - Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entities 
    remote isolated function listA_SalesContractText(int? top = (), int? skip = (), string? filter = (), boolean? count = (), A_SalesContractTextOrderByOptions? orderby = (), A_SalesContractTextSelectOptions? 'select = (), A_SalesContractTextExpandOptions? expand = ()) returns CollectionOfA_salescontracttexttype|error {
        string resourcePath = string `/A_SalesContractText`;
        map<anydata> queryParam = {"$top": top, "$skip": skip, "$filter": filter, "$count": count, "$orderby": orderby, "$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$orderby": {style: FORM, explode: false}, "$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        CollectionOfA_salescontracttexttype response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Reads a specific header-level text.
    #
    # + salesContract - Sales Contract
    # + language - Language Key
    # + longTextID - Text ID
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entity 
    remote isolated function getA_SalesContractTextByKey(string salesContract, string language, string longTextID, A_SalesContractTextByKeySelectOptions? 'select = (), A_SalesContractTextByKeyExpandOptions? expand = ()) returns A_SalesContractText|error {
        string resourcePath = string `/A_SalesContractText(SalesContract='${getEncodedUri(salesContract)}',Language='${getEncodedUri(language)}',LongTextID='${getEncodedUri(longTextID)}')`;
        map<anydata> queryParam = {"$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        A_SalesContractText response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Deletes a specific header-level text.
    #
    # + salesContract - Sales Contract
    # + language - Language Key
    # + longTextID - Text ID
    # + return - Success 
    remote isolated function deleteA_SalesContractText(string salesContract, string language, string longTextID) returns http:Response|error {
        string resourcePath = string `/A_SalesContractText(SalesContract='${getEncodedUri(salesContract)}',Language='${getEncodedUri(language)}',LongTextID='${getEncodedUri(longTextID)}')`;
        http:Response response = check self.clientEp->delete(resourcePath);
        return response;
    }
    # Updates a specific header-level text.
    #
    # + salesContract - Sales Contract
    # + language - Language Key
    # + longTextID - Text ID
    # + payload - New property values
    # + return - Success 
    remote isolated function patchA_SalesContractText(string salesContract, string language, string longTextID, UpdateA_SalesContractText payload) returns http:Response|error {
        string resourcePath = string `/A_SalesContractText(SalesContract='${getEncodedUri(salesContract)}',Language='${getEncodedUri(language)}',LongTextID='${getEncodedUri(longTextID)}')`;
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        http:Response response = check self.clientEp->patch(resourcePath, request);
        return response;
    }
    # Reads the sales contract header for a specific header text.
    #
    # + salesContract - Sales Contract
    # + language - Language Key
    # + longTextID - Text ID
    # + 'select - Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
    # + expand - Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)
    # + return - Retrieved entity 
    remote isolated function getSalesContractOfA_SalesContractText(string salesContract, string language, string longTextID, SalesContractOfA_SalesContractTextSelectOptions? 'select = (), SalesContractOfA_SalesContractTextExpandOptions? expand = ()) returns A_SalesContract|error {
        string resourcePath = string `/A_SalesContractText(SalesContract='${getEncodedUri(salesContract)}',Language='${getEncodedUri(language)}',LongTextID='${getEncodedUri(longTextID)}')/to_SalesContract`;
        map<anydata> queryParam = {"$select": 'select, "$expand": expand};
        map<Encoding> queryParamEncoding = {"$select": {style: FORM, explode: false}, "$expand": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        A_SalesContract response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Approves a specific sales contract.
    #
    # + payload - Action parameters
    # + return - Success 
    remote isolated function releaseApprovalRequest(ReleaseApprovalRequest_body payload) returns FunctionResult|error {
        string resourcePath = string `/releaseApprovalRequest`;
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        FunctionResult response = check self.clientEp->post(resourcePath, request);
        return response;
    }
    # Rejects a specific sales contract.
    #
    # + payload - Action parameters
    # + return - Success 
    remote isolated function rejectApprovalRequest(RejectApprovalRequest_body payload) returns FunctionResult|error {
        string resourcePath = string `/rejectApprovalRequest`;
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        FunctionResult response = check self.clientEp->post(resourcePath, request);
        return response;
    }
    # Send a group of requests
    #
    # + request - Batch request
    # + return - Batch response 
    remote isolated function performBatchOperation(http:Request request) returns string|error {
        string resourcePath = string `/$batch`;
        // TODO: Update the request as needed;
        string response = check self.clientEp->post(resourcePath, request);
        return response;
    }
}
